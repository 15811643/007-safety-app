import streamlit as st
import json
import os
from datetime import datetime

# Custom CSS for modern styling
st.markdown("""
<style>
    .reports-header {
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
        text-align: center;
        color: white;
    }
    .report-card {
        background: white;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin: 1rem 0;
        border-left: 4px solid #667eea;
    }
    .stButton > button {
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 25px;
        padding: 0.5rem 2rem;
        font-weight: bold;
    }
</style>
""", unsafe_allow_html=True)

# Reports header
st.markdown("""
<div class="reports-header">
    <h1>📝 Safety Reports Generator</h1>
    <p style="font-size: 1.1rem; margin-top: 0;">Generate Comprehensive Safety Reports</p>
</div>
""", unsafe_allow_html=True)

# Report types
st.markdown("## 📋 Report Types")

report_types = {
    "Inspection Report": "Generate detailed inspection reports with findings and recommendations",
    "Audit Report": "Create comprehensive audit reports with compliance status",
    "Pre-Visit Report": "Generate site assessment reports for job preparation",
    "Trend Analysis": "Create trend analysis reports for safety metrics",
    "Compliance Report": "Generate regulatory compliance reports"
}

selected_report = st.selectbox("Select Report Type:", list(report_types.keys()))

# Report parameters
st.markdown("## ⚙️ Report Parameters")

col1, col2 = st.columns(2)

with col1:
    start_date = st.date_input("Start Date:")
    end_date = st.date_input("End Date:")
    site_filter = st.text_input("Site Filter (optional):")

with col2:
    inspector_filter = st.text_input("Inspector Filter (optional):")
    include_charts = st.checkbox("Include Charts", value=True)
    include_recommendations = st.checkbox("Include Recommendations", value=True)

# Generate report
if st.button("🚀 Generate Report", use_container_width=True):
    with st.spinner("Generating report..."):
        # Simulate report generation
        import time
        time.sleep(2)
        
        # Create sample report content
        report_content = f"""
# {selected_report}
**Generated:** {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
**Period:** {start_date} to {end_date}
**Site:** {site_filter if site_filter else "All Sites"}
**Inspector:** {inspector_filter if inspector_filter else "All Inspectors"}

## Executive Summary
This report provides a comprehensive analysis of safety inspections and compliance status for the specified period.

## Key Findings
- **Total Inspections:** 45
- **Compliance Rate:** 92%
- **Critical Issues:** 3
- **Minor Issues:** 12
- **Recommendations:** 8

## Detailed Analysis
### Inspection Breakdown
- Traffic Control: 15 inspections (100% compliance)
- Trenching Safety: 12 inspections (92% compliance)
- Overhead Hazards: 8 inspections (88% compliance)
- Lifting Operations: 10 inspections (95% compliance)

### Risk Assessment
- **High Risk Areas:** Laboratory B, Warehouse Floor
- **Trend:** Severity levels decreasing by 15% over period
- **Most Common Issues:** PPE compliance, equipment maintenance

## Recommendations
1. **Immediate Actions:**
   - Conduct safety audit of Laboratory B
   - Schedule additional PPE training
   - Upgrade equipment maintenance schedule

2. **Long-term Improvements:**
   - Implement weekly safety meetings
   - Establish safety incentive program
   - Enhance incident reporting system

## Compliance Status
- **Ontario Regulation 213/91:** Fully Compliant
- **Environmental Standards:** 95% Compliance
- **Training Requirements:** 100% Current
- **Equipment Certification:** 98% Valid

---
*Report generated by 007 Safety Inspection Assistant*
        """
        
        st.markdown("## 📄 Generated Report")
        st.markdown(report_content)
        
        # Download options
        st.markdown("## 📥 Download Options")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            if st.button("📄 Download PDF", use_container_width=True):
                st.success("✅ PDF report downloaded!")
        
        with col2:
            if st.button("📊 Download Excel", use_container_width=True):
                st.success("✅ Excel report downloaded!")
        
        with col3:
            if st.button("📋 Download Word", use_container_width=True):
                st.success("✅ Word report downloaded!")

# Recent reports
st.markdown("---")
st.markdown("## 📚 Recent Reports")

# Check for existing reports
reports_dir = "reports"
if os.path.exists(reports_dir):
    report_files = [f for f in os.listdir(reports_dir) if f.endswith('.json')]
    if report_files:
        for report_file in report_files[-5:]:  # Show last 5 reports
            st.markdown(f"""
            <div class="report-card">
                <h4>📄 {report_file}</h4>
                <p>Generated: {datetime.fromtimestamp(os.path.getctime(os.path.join(reports_dir, report_file))).strftime('%Y-%m-%d %H:%M')}</p>
            </div>
            """, unsafe_allow_html=True)
    else:
        st.info("No recent reports found. Generate your first report above!")
else:
    st.info("Reports directory not found. Generate your first report above!")

# Report templates
st.markdown("---")
st.markdown("## 📋 Report Templates")

templates = {
    "Daily Inspection Summary": "Quick daily summary of all inspections",
    "Weekly Compliance Report": "Weekly compliance status and trends",
    "Monthly Safety Review": "Comprehensive monthly safety analysis",
    "Incident Investigation": "Detailed incident investigation report",
    "Annual Safety Assessment": "Annual safety performance review"
}

selected_template = st.selectbox("Select Template:", list(templates.keys()))

if st.button("📋 Load Template", use_container_width=True):
    st.info(f"Template '{selected_template}' loaded. Customize parameters above and generate report.")