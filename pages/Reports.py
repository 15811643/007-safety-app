import streamlit as st
import os
from datetime import datetime

# Custom CSS for modern styling
st.markdown(
    """
<style>
    .reports-header {
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
        text-align: center;
        color: white;
    }
    .report-card {
        background: white;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin: 1rem 0;
        border-left: 4px solid #667eea;
    }
    .stButton > button {
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 25px;
        padding: 0.5rem 2rem;
        font-weight: bold;
    }
</style>
""",
    unsafe_allow_html=True,
)

# Reports header
st.markdown(
    """
<div class="reports-header">
    <h1>Safety Reports Generator</h1>
    <p style="font-size: 1.1rem; margin-top: 0;">Generate Comprehensive Safety Reports</p>
</div>
""",
    unsafe_allow_html=True,
)

# Report types
st.markdown("## Report Types")

report_types = {
    "Inspection Report": "Generate detailed inspection reports with findings and recommendations",
    "Audit Report": "Create comprehensive audit reports with compliance status",
    "Pre-Visit Report": "Generate site assessment reports for job preparation",
    "Trend Analysis": "Create trend analysis reports for safety metrics",
    "Compliance Report": "Generate regulatory compliance reports",
}

selected_report = st.selectbox("Select Report Type:", list(report_types.keys()))

# Report parameters
st.markdown("## Report Parameters")

col1, col2 = st.columns(2)

with col1:
    start_date = st.date_input("Start Date:")
    end_date = st.date_input("End Date:")
    site_filter = st.text_input("Site Filter (optional):")

with col2:
    inspector_filter = st.text_input("Inspector Filter (optional):")
    include_charts = st.checkbox("Include Charts", value=True)
    include_recommendations = st.checkbox("Include Recommendations", value=True)

# Generate report
if st.button("Generate Report", use_container_width=True):
    with st.spinner("Generating report..."):
        # Create sample report content
        report_content = f"""
# {selected_report}
**Generated:** {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
**Period:** {start_date} to {end_date}
**Site:** {site_filter if site_filter else "All Sites"}
**Inspector:** {inspector_filter if inspector_filter else "All Inspectors"}

## Executive Summary
This report provides a comprehensive analysis of safety inspections and compliance status for the specified period.

## Key Findings
- **Total Inspections:** 45
- **Compliance Rate:** 92%
- **Critical Issues:** 3
- **Minor Issues:** 12
- **Recommendations:** 8

## Detailed Analysis
Explain detailed findings and charts here.

---
*Report generated by 007 Safety Inspection Assistant*
        """

        st.markdown("## Generated Report")
        st.markdown(report_content)

        # Download options (placeholder actions)
        st.markdown("## Download Options")
        col1, col2, col3 = st.columns(3)
        with col1:
            st.download_button(
                "Download Markdown",
                data=report_content,
                file_name="report.md",
                mime="text/markdown",
            )
        with col2:
            st.download_button(
                "Download HTML",
                data=st._repr_html_(),
                file_name="report.html",
                mime="text/html",
            )
        with col3:
            st.info("PDF export available in Reports & Exports page")

# Recent reports (show from ./reports if present)
st.markdown("---")
st.markdown("## Recent Reports")
reports_dir = "reports"
if os.path.exists(reports_dir):
    report_files = [f for f in os.listdir(reports_dir) if f.endswith(".json")]
    if report_files:
        for report_file in report_files[-5:]:
            ts = datetime.fromtimestamp(
                os.path.getctime(os.path.join(reports_dir, report_file))
            ).strftime("%Y-%m-%d %H:%M")
            st.markdown(
                f"""
            <div class="report-card">
                <h4>{report_file}</h4>
                <p>Generated: {ts}</p>
            </div>
            """,
                unsafe_allow_html=True,
            )
    else:
        st.info("No recent reports found. Generate your first report above!")
else:
    st.info("Reports directory not found. Generate your first report above!")

